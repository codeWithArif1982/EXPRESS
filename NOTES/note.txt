# This is a server side web frame for node
# To develop Server side Rest API
# To develop a complete application with template engine such as PUG 




# Request Method
    The request method indicates the method to be performed on the resource identified by the given Request-URI. The method is case-sensitive and should always be mentioned in uppercase. The following table lists all the supported methods in HTTP/1.1.
        * GET
            The GET method is used to retrieve information from the given server using a given URI. Requests using GET should only retrieve data and should have no other effect on the data.
        * HEAD    
            Same as GET, but it transfers the status line and the header section only.
        * POST
            A POST request is used to send data to the server, for example, customer information, file upload, etc. using HTML forms.
        * PUT
            Replaces all the current representations of the target resource with the uploaded content.
        * DELETE
            Removes all the current representations of the target resource given by URI.
        * CONNECT
            Establishes a tunnel to the server identified by a given URI.
        * OPTIONS
            Describe the communication options for the target resource.
        * TRACE
            Performs a message loop back test along with the path to the target resource.




# HTTP - Header Fields
    * General-header
        These header fields have general applicability for both request and response messages.
            Cache-Control : cache-request-directive|cache-response-directive
                cache-request-directive
                    Cache-control: no-cache
                        A cache must not use the response to satisfy a subsequent request without successful revalidation with the origin server.
                    Cache-control: no-store
                        The cache should not store anything about the client request or server response.
                    Cache-control: max-age = seconds
                        Indicates that the client is willing to accept a response whose age is not greater than the specified time in seconds.
                    Cache-control: max-stale [ = seconds ]
                        Indicates that the client is willing to accept a response that has exceeded its expiration time. If seconds are given, it must not be expired by more than that time.
                    Cache-control: min-fresh = seconds
                        Indicates that the client is willing to accept a response whose freshness lifetime is not less than its current age plus the specified time in seconds.
                    Cache-control: no-transform 
                        Does not convert the entity-body.
                    Cache-control: only-if-cached
                        Does not retrieve new data. The cache can send a document only if it is in the cache, and should not contact the origin-server to see if a newer copy exists.
                cache-response-directive
                    public
                        Indicates that the response may be cached by any cache.
                    private
                        Indicates that all or part of the response message is intended for a single user and must not be cached by a shared cache.
                    no-cache
                        A cache must not use the response to satisfy a subsequent request without successful re-validation with the origin server.
                    no-store
                        The cache should not store anything about the client request or server response.
                    no-transform
                        Does not convert the entity-body.
                    must-revalidate
                        The cache must verify the status of the stale documents before using it and expired ones should not be used.
                    proxy-revalidate
                        The proxy-revalidate directive has the same meaning as the must- revalidate directive, except that it does not apply to non-shared user agent caches.
                    max-age = seconds
                        Indicates that the client is willing to accept a response whose age is not greater than the specified time in seconds.
                    s-maxage = seconds
                        The maximum age specified by this directive overrides the maximum age specified by either the max-age directive or the Expires header. The s-maxage directive is always ignored by a private cache.

    * Client Request-header 
        These header fields have applicability only for request messages.
    * Server Response-header
        These header fields have applicability only for response messages.
    * Entity-header
        These header fields define meta information about the entity-body or, if no body is present, about the resource identified by the request.




# Response Body
# Response Header
# Response Status
# Response Cookies


# Simple Get/Post Request => String Response
# Simple Get/Post Request => Response Status Code
# Simple Get/Post Request => JSON Response
# Simple Get/Post Request => Downloaded Response
# Simple Get/Post Request => Response Redirect
# Simple Get/Post Request => Response Header
# Simple Get/Post Request => Set Response Cookie
# Simple Get/Post Request => Clear Response Cookie


